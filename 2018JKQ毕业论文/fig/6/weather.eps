%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 315 575 476
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: cb219@cb219-PC
%%Title: Simulations (1)
%%CreationDate: 2016年3月26日 星期六 下午08时29分55秒 CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
427 123 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
427.000 0.00000 l
427.000 123.000 l
0.00000 123.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
427.000 0.00000 l
427.000 123.000 l
0.00000 123.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
cliprestore
0 0 427 123 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0 0 427 123 rc
q
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
427.000 0.00000 l
427.000 123.000 l
0.00000 123.000 l
0.00000 0.00000 l
h
f
Q
newpath
204.312 120.312 m
204.312 120.750 204.391 121.047 204.547 121.203  c
204.703 121.359 204.938 121.438 205.250 121.438  c
205.562 121.438 205.812 121.336 206.000 121.133  c
206.188 120.930 206.312 120.641 206.375 120.266  c
206.609 120.359 l
206.547 120.797 206.383 121.156 206.117 121.438  c
205.852 121.719 205.500 121.859 205.062 121.859  c
204.594 121.859 204.242 121.719 204.008 121.438  c
203.773 121.156 203.656 120.719 203.656 120.125  c
203.656 116.844 l
202.250 116.844 l
202.250 116.562 l
202.625 116.562 l
203.000 116.562 203.305 116.445 203.539 116.211  c
203.773 115.977 203.922 115.609 203.984 115.109  c
204.031 114.734 l
204.312 114.734 l
204.312 116.562 l
206.188 116.562 l
206.188 116.844 l
204.312 116.844 l
204.312 120.312 l
h
210.172 117.266 m
210.172 117.141 210.141 117.039 210.078 116.961  c
210.016 116.883 209.906 116.844 209.750 116.844  c
208.766 116.844 l
208.766 116.562 l
209.234 116.562 l
209.516 116.562 209.781 116.539 210.031 116.492  c
210.281 116.445 210.516 116.359 210.734 116.234  c
210.828 116.234 l
210.828 121.156 l
210.828 121.281 210.867 121.375 210.945 121.438  c
211.023 121.500 211.125 121.531 211.250 121.531  c
212.234 121.531 l
212.234 121.812 l
208.766 121.812 l
208.766 121.531 l
209.750 121.531 l
209.906 121.531 210.016 121.500 210.078 121.438  c
210.141 121.375 210.172 121.281 210.172 121.156  c
210.172 117.266 l
h
210.547 113.703 m
210.703 113.703 210.844 113.758 210.969 113.867  c
211.094 113.977 211.156 114.109 211.156 114.266  c
211.156 114.422 211.094 114.562 210.969 114.688  c
210.844 114.812 210.703 114.875 210.547 114.875  c
210.391 114.875 210.250 114.812 210.125 114.688  c
210.000 114.562 209.938 114.422 209.938 114.266  c
209.938 114.109 210.000 113.977 210.125 113.867  c
210.250 113.758 210.391 113.703 210.547 113.703  c
h
213.828 116.562 m
213.984 116.562 214.141 116.547 214.297 116.516  c
214.453 116.484 214.578 116.438 214.672 116.375  c
214.766 116.375 l
214.766 117.172 l
214.922 116.922 215.094 116.742 215.281 116.633  c
215.469 116.523 215.672 116.469 215.891 116.469  c
216.172 116.469 216.391 116.523 216.547 116.633  c
216.703 116.742 216.797 116.922 216.828 117.172  c
216.984 116.922 217.164 116.742 217.367 116.633  c
217.570 116.523 217.781 116.469 218.000 116.469  c
218.375 116.469 218.633 116.578 218.773 116.797  c
218.914 117.016 218.984 117.297 218.984 117.641  c
218.984 121.203 l
218.984 121.328 219.016 121.414 219.078 121.461  c
219.141 121.508 219.234 121.531 219.359 121.531  c
219.453 121.531 l
219.453 121.812 l
217.859 121.812 l
217.859 121.531 l
217.953 121.531 l
218.078 121.531 218.172 121.508 218.234 121.461  c
218.297 121.414 218.328 121.328 218.328 121.203  c
218.328 117.688 l
218.328 117.344 218.289 117.117 218.211 117.008  c
218.133 116.898 218.016 116.844 217.859 116.844  c
217.641 116.844 217.445 116.922 217.273 117.078  c
217.102 117.234 216.969 117.453 216.875 117.734  c
216.875 121.203 l
216.875 121.328 216.906 121.414 216.969 121.461  c
217.031 121.508 217.125 121.531 217.250 121.531  c
217.344 121.531 l
217.344 121.812 l
215.750 121.812 l
215.750 121.531 l
215.844 121.531 l
215.969 121.531 216.062 121.508 216.125 121.461  c
216.188 121.414 216.219 121.328 216.219 121.203  c
216.219 117.688 l
216.219 117.406 216.188 117.195 216.125 117.055  c
216.062 116.914 215.938 116.844 215.750 116.844  c
215.531 116.844 215.336 116.922 215.164 117.078  c
214.992 117.234 214.859 117.469 214.766 117.781  c
214.766 121.203 l
214.766 121.328 214.797 121.414 214.859 121.461  c
214.922 121.508 215.016 121.531 215.141 121.531  c
215.234 121.531 l
215.234 121.812 l
213.641 121.812 l
213.641 121.531 l
213.734 121.531 l
213.859 121.531 213.953 121.508 214.016 121.461  c
214.078 121.414 214.109 121.328 214.109 121.203  c
214.109 117.125 l
214.109 117.031 214.094 116.961 214.062 116.914  c
214.031 116.867 213.969 116.844 213.875 116.844  c
213.688 116.844 l
213.688 116.562 l
213.828 116.562 l
h
224.000 118.906 m
224.031 118.219 223.914 117.695 223.648 117.336  c
223.383 116.977 223.031 116.797 222.594 116.797  c
222.125 116.797 221.742 116.984 221.445 117.359  c
221.148 117.734 221.000 118.250 221.000 118.906  c
224.000 118.906 l
h
221.000 119.188 m
221.000 120.031 221.164 120.633 221.492 120.992  c
221.820 121.352 222.250 121.531 222.781 121.531  c
223.188 121.531 223.531 121.414 223.812 121.180  c
224.094 120.945 224.297 120.656 224.422 120.312  c
224.656 120.406 l
224.562 120.750 224.352 121.086 224.023 121.414  c
223.695 121.742 223.250 121.906 222.688 121.906  c
221.969 121.906 221.383 121.672 220.930 121.203  c
220.477 120.734 220.250 120.062 220.250 119.188  c
220.250 118.406 220.477 117.758 220.930 117.242  c
221.383 116.727 221.938 116.469 222.594 116.469  c
223.188 116.469 223.703 116.672 224.141 117.078  c
224.578 117.484 224.797 118.188 224.797 119.188  c
221.000 119.188 l
h
f
[ 0.00000 -1.00000 1.00000 0.00000 -65.5000 87.5000 ] concat
newpath
14.0469 76.3594 m
13.7656 76.3594 l
12.1719 71.7656 l
12.1406 71.6406 12.0781 71.5391 11.9844 71.4609  c
11.8906 71.3828 11.7812 71.3438 11.6562 71.3438  c
11.4219 71.3438 l
11.4219 71.0625 l
13.4375 71.0625 l
13.4375 71.3438 l
13.2500 71.3438 l
13.0625 71.3438 12.9531 71.3750 12.9219 71.4375  c
12.8906 71.5000 12.8750 71.5625 12.8750 71.6250  c
12.8750 71.7500 12.8906 71.8594 12.9219 71.9531  c
14.0469 75.2344 l
14.1406 75.2344 l
15.2656 72.0000 l
15.3281 71.8438 15.3594 71.7344 15.3594 71.6719  c
15.3594 71.6406 15.3281 71.5781 15.2656 71.4844  c
15.2031 71.3906 15.0781 71.3438 14.8906 71.3438  c
14.7969 71.3438 l
14.7969 71.0625 l
16.4844 71.0625 l
16.4844 71.3438 l
16.3906 71.3438 l
16.2031 71.3438 16.0547 71.3984 15.9453 71.5078  c
15.8359 71.6172 15.7344 71.7812 15.6406 72.0000  c
14.0469 76.3594 l
h
19.2969 76.3594 m
18.7344 76.3594 18.2969 76.2266 17.9844 75.9609  c
17.6719 75.6953 17.5156 75.3906 17.5156 75.0469  c
17.5156 74.4844 17.7578 74.0234 18.2422 73.6641  c
18.7266 73.3047 19.6875 73.0469 21.1250 72.8906  c
21.1250 72.3281 l
21.1250 72.0156 21.0547 71.7578 20.9141 71.5547  c
20.7734 71.3516 20.4531 71.2500 19.9531 71.2500  c
19.4219 71.2500 19.0469 71.3359 18.8281 71.5078  c
18.6094 71.6797 18.5312 71.8594 18.5938 72.0469  c
18.6250 72.1094 18.6406 72.1719 18.6406 72.2344  c
18.6406 72.2969 18.6172 72.3750 18.5703 72.4688  c
18.5234 72.5625 18.4062 72.6094 18.2188 72.6094  c
18.0938 72.6094 17.9922 72.5703 17.9141 72.4922  c
17.8359 72.4141 17.7969 72.2969 17.7969 72.1406  c
17.7969 71.8594 18.0000 71.5938 18.4062 71.3438  c
18.8125 71.0938 19.3125 70.9688 19.9062 70.9688  c
20.5312 70.9688 21.0000 71.0859 21.3125 71.3203  c
21.6250 71.5547 21.7812 71.8906 21.7812 72.3281  c
21.7812 75.4219 l
21.7812 75.6719 21.8047 75.8203 21.8516 75.8672  c
21.8984 75.9141 21.9844 75.9375 22.1094 75.9375  c
22.2656 75.9375 22.3750 75.8672 22.4375 75.7266  c
22.5000 75.5859 22.5312 75.3906 22.5312 75.1406  c
22.7656 75.1406 l
22.7656 75.5781 22.6875 75.8828 22.5312 76.0547  c
22.3750 76.2266 22.1719 76.3125 21.9219 76.3125  c
21.7031 76.3125 21.5312 76.2656 21.4062 76.1719  c
21.2812 76.0781 21.1875 75.9219 21.1250 75.7031  c
20.8125 75.9219 20.5234 76.0859 20.2578 76.1953  c
19.9922 76.3047 19.6719 76.3594 19.2969 76.3594  c
h
18.3125 74.9062 m
18.3125 75.1875 18.3984 75.4453 18.5703 75.6797  c
18.7422 75.9141 19.0156 76.0312 19.3906 76.0312  c
19.6719 76.0312 19.9531 75.9766 20.2344 75.8672  c
20.5156 75.7578 20.8125 75.5938 21.1250 75.3750  c
21.1250 73.1719 l
20.0625 73.2969 19.3281 73.5078 18.9219 73.8047  c
18.5156 74.1016 18.3125 74.4688 18.3125 74.9062  c
h
24.7344 68.2969 m
25.0156 68.2969 25.2812 68.2656 25.5312 68.2031  c
25.7812 68.1406 26.0156 68.0469 26.2344 67.9219  c
26.3281 67.9219 l
26.3281 75.6562 l
26.3281 75.7812 26.3672 75.8750 26.4453 75.9375  c
26.5234 76.0000 26.6250 76.0312 26.7500 76.0312  c
27.8281 76.0312 l
27.8281 76.3125 l
24.1719 76.3125 l
24.1719 76.0312 l
25.2500 76.0312 l
25.4062 76.0312 25.5156 76.0000 25.5781 75.9375  c
25.6406 75.8750 25.6719 75.7812 25.6719 75.6562  c
25.6719 68.9531 l
25.6719 68.8281 25.6406 68.7344 25.5781 68.6719  c
25.5156 68.6094 25.4062 68.5781 25.2500 68.5781  c
24.2188 68.5781 l
24.2188 68.2969 l
24.7344 68.2969 l
h
31.7188 75.8906 m
32.0938 75.8906 32.4141 75.7969 32.6797 75.6094  c
32.9453 75.4219 33.1406 75.1250 33.2656 74.7188  c
33.2656 71.7656 l
33.2656 71.6406 33.2344 71.5391 33.1719 71.4609  c
33.1094 71.3828 33.0000 71.3438 32.8438 71.3438  c
32.5625 71.3438 l
32.5625 71.0625 l
32.8438 71.0625 l
33.0312 71.0625 33.2031 71.0469 33.3594 71.0156  c
33.5156 70.9844 33.6719 70.9062 33.8281 70.7812  c
33.9219 70.7812 l
33.9219 75.3750 l
33.9219 75.5000 33.9609 75.5938 34.0391 75.6562  c
34.1172 75.7188 34.2188 75.7500 34.3438 75.7500  c
34.6250 75.7500 l
34.6250 76.0312 l
34.3438 76.0312 l
34.1875 76.0312 34.0312 76.0547 33.8750 76.1016  c
33.7188 76.1484 33.5469 76.2188 33.3594 76.3125  c
33.2656 76.3125 l
33.2656 75.3281 l
33.1094 75.6719 32.8750 75.9297 32.5625 76.1016  c
32.2500 76.2734 31.8906 76.3594 31.4844 76.3594  c
30.9844 76.3594 30.6094 76.2188 30.3594 75.9375  c
30.1094 75.6562 29.9844 75.2031 29.9844 74.5781  c
29.9844 71.7656 l
29.9844 71.6406 29.9531 71.5391 29.8906 71.4609  c
29.8281 71.3828 29.7188 71.3438 29.5625 71.3438  c
29.2812 71.3438 l
29.2812 71.0625 l
29.5625 71.0625 l
29.7500 71.0625 29.9219 71.0469 30.0781 71.0156  c
30.2344 70.9844 30.3906 70.9062 30.5469 70.7812  c
30.6406 70.7812 l
30.6406 74.6719 l
30.6406 75.1094 30.7344 75.4219 30.9219 75.6094  c
31.1094 75.7969 31.3750 75.8906 31.7188 75.8906  c
h
39.5000 73.4062 m
39.5312 72.7188 39.4141 72.1953 39.1484 71.8359  c
38.8828 71.4766 38.5312 71.2969 38.0938 71.2969  c
37.6250 71.2969 37.2422 71.4844 36.9453 71.8594  c
36.6484 72.2344 36.5000 72.7500 36.5000 73.4062  c
39.5000 73.4062 l
h
36.5000 73.6875 m
36.5000 74.5312 36.6641 75.1328 36.9922 75.4922  c
37.3203 75.8516 37.7500 76.0312 38.2812 76.0312  c
38.6875 76.0312 39.0312 75.9141 39.3125 75.6797  c
39.5938 75.4453 39.7969 75.1562 39.9219 74.8125  c
40.1562 74.9062 l
40.0625 75.2500 39.8516 75.5859 39.5234 75.9141  c
39.1953 76.2422 38.7500 76.4062 38.1875 76.4062  c
37.4688 76.4062 36.8828 76.1719 36.4297 75.7031  c
35.9766 75.2344 35.7500 74.5625 35.7500 73.6875  c
35.7500 72.9062 35.9766 72.2578 36.4297 71.7422  c
36.8828 71.2266 37.4375 70.9688 38.0938 70.9688  c
38.6875 70.9688 39.2031 71.1719 39.6406 71.5781  c
40.0781 71.9844 40.2969 72.6875 40.2969 73.6875  c
36.5000 73.6875 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
.990000 w
newpath
25.0000 86.6781 m
24.5625 86.6781 24.1953 87.0141 23.8984 87.6859  c
23.6016 88.3578 23.4531 89.2562 23.4531 90.3812  c
23.4531 91.5687 23.6016 92.4906 23.8984 93.1469  c
24.1953 93.8031 24.5625 94.1312 25.0000 94.1312  c
25.4688 94.1312 25.8359 93.8031 26.1016 93.1469  c
26.3672 92.4906 26.5000 91.5687 26.5000 90.3812  c
26.5000 89.2562 26.3750 88.3578 26.1250 87.6859  c
25.8750 87.0141 25.5000 86.6781 25.0000 86.6781  c
h
25.0000 94.5062 m
24.3125 94.5062 23.7344 94.1469 23.2656 93.4281  c
22.7969 92.7094 22.5625 91.6937 22.5625 90.3812  c
22.5625 89.1625 22.7891 88.1781 23.2422 87.4281  c
23.6953 86.6781 24.2812 86.3031 25.0000 86.3031  c
25.6875 86.3031 26.2578 86.6625 26.7109 87.3812  c
27.1641 88.1000 27.3906 89.1000 27.3906 90.3812  c
27.3906 91.6625 27.1641 92.6703 26.7109 93.4047  c
26.2578 94.1391 25.6875 94.5062 25.0000 94.5062  c
h
f
newpath
27.2500 69.0361 m
27.2500 69.6299 27.0312 70.1533 26.5938 70.6065  c
26.1562 71.0596 25.5469 71.2861 24.7656 71.2861  c
24.2031 71.2861 23.7188 71.1299 23.3125 70.8174  c
22.9062 70.5049 22.7031 70.1455 22.7031 69.7393  c
22.7031 69.5518 22.7656 69.3877 22.8906 69.2471  c
23.0156 69.1065 23.1406 69.0361 23.2656 69.0361  c
23.4531 69.0361 23.5859 69.1065 23.6641 69.2471  c
23.7422 69.3877 23.7812 69.5049 23.7812 69.5986  c
23.7812 69.7549 23.7500 69.8799 23.6875 69.9736  c
23.6250 70.0986 23.5938 70.2080 23.5938 70.3018  c
23.5938 70.4893 23.7109 70.6455 23.9453 70.7705  c
24.1797 70.8955 24.4375 70.9580 24.7188 70.9580  c
25.2812 70.9580 25.7031 70.7940 25.9844 70.4658  c
26.2656 70.1377 26.4062 69.6299 26.4062 68.9424  c
26.4062 68.3799 26.2578 67.9268 25.9609 67.5830  c
25.6641 67.2393 25.1094 67.0674 24.2969 67.0674  c
24.2969 66.7393 l
24.9219 66.7393 25.3828 66.5908 25.6797 66.2940  c
25.9766 65.9971 26.1250 65.5830 26.1250 65.0518  c
26.1250 64.6143 26.0078 64.2315 25.7734 63.9033  c
25.5391 63.5752 25.1719 63.4111 24.6719 63.4111  c
24.4531 63.4111 24.2188 63.4658 23.9688 63.5752  c
23.7188 63.6846 23.5938 63.8643 23.5938 64.1143  c
23.5938 64.3643 23.6250 64.5205 23.6875 64.5830  c
23.7500 64.6455 23.7812 64.7236 23.7812 64.8174  c
23.7812 64.9736 23.7500 65.0986 23.6875 65.1924  c
23.6250 65.2861 23.5156 65.3330 23.3594 65.3330  c
23.2344 65.3330 23.1172 65.2861 23.0078 65.1924  c
22.8984 65.0986 22.8438 64.9268 22.8438 64.6768  c
22.8438 64.2080 23.0469 63.8252 23.4531 63.5283  c
23.8594 63.2315 24.3281 63.0830 24.8594 63.0830  c
25.4844 63.0830 25.9844 63.2783 26.3594 63.6690  c
26.7344 64.0596 26.9219 64.4736 26.9219 64.9111  c
26.9219 65.3799 26.8047 65.7783 26.5703 66.1065  c
26.3359 66.4346 25.9688 66.6768 25.4688 66.8330  c
26.1562 67.0830 26.6250 67.4111 26.8750 67.8174  c
27.1250 68.2236 27.2500 68.6299 27.2500 69.0361  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
29.0000 67.7799 m
426.000 67.7799 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
23.4531 44.7848 m
23.4531 45.7223 23.6172 46.4489 23.9453 46.9645  c
24.2734 47.4801 24.6719 47.7379 25.1406 47.7379  c
25.6094 47.7379 25.9688 47.5660 26.2188 47.2223  c
26.4688 46.8785 26.5938 46.2379 26.5938 45.3004  c
26.5938 44.6754 26.4609 44.1910 26.1953 43.8473  c
25.9297 43.5035 25.6094 43.3317 25.2344 43.3317  c
24.8906 43.3317 24.5703 43.4332 24.2734 43.6364  c
23.9766 43.8395 23.7031 44.2223 23.4531 44.7848  c
h
25.2812 42.8629 m
26.0312 42.8629 26.5703 43.1129 26.8984 43.6129  c
27.2266 44.1129 27.3906 44.6754 27.3906 45.3004  c
27.3906 46.2379 27.1641 46.9332 26.7109 47.3864  c
26.2578 47.8395 25.7344 48.0660 25.1406 48.0660  c
24.2969 48.0660 23.6562 47.7457 23.2188 47.1051  c
22.7812 46.4645 22.5625 45.5348 22.5625 44.3160  c
22.5625 42.8785 22.8281 41.7770 23.3594 41.0114  c
23.8906 40.2457 24.6094 39.8629 25.5156 39.8629  c
25.9531 39.8629 26.3047 39.9879 26.5703 40.2379  c
26.8359 40.4879 26.9688 40.7067 26.9688 40.8942  c
26.9688 41.0817 26.9297 41.2223 26.8516 41.3160  c
26.7734 41.4098 26.6406 41.4567 26.4531 41.4567  c
26.2969 41.4567 26.1797 41.4176 26.1016 41.3395  c
26.0234 41.2614 25.9844 41.1442 25.9844 40.9879  c
25.9844 40.9254 26.0000 40.8629 26.0312 40.8004  c
26.0312 40.7379 26.0312 40.6754 26.0312 40.6129  c
26.0312 40.4879 25.9844 40.3864 25.8906 40.3082  c
25.7969 40.2301 25.6250 40.1910 25.3750 40.1910  c
24.8438 40.1910 24.3906 40.4332 24.0156 40.9176  c
23.6406 41.4020 23.4531 42.4567 23.4531 44.0817  c
23.6406 43.6754 23.8984 43.3707 24.2266 43.1676  c
24.5547 42.9645 24.9062 42.8629 25.2812 42.8629  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
29.0000 44.5598 m
426.000 44.5598 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
23.3125 19.2209 m
23.3125 19.9084 23.4453 20.4319 23.7109 20.7913  c
23.9766 21.1506 24.3125 21.3303 24.7188 21.3303  c
25.1875 21.3303 25.5938 21.1116 25.9375 20.6741  c
26.2812 20.2366 26.4531 19.8303 26.4531 19.4553  c
26.4531 18.7053 26.3281 18.1038 26.0781 17.6506  c
25.8281 17.1975 25.4219 16.9709 24.8594 16.9709  c
24.3281 16.9709 23.9375 17.1819 23.6875 17.6038  c
23.4375 18.0256 23.3125 18.5647 23.3125 19.2209  c
h
24.5781 21.7522 m
23.9531 21.7522 23.4531 21.5569 23.0781 21.1663  c
22.7031 20.7756 22.5156 20.1428 22.5156 19.2678  c
22.5156 18.5178 22.7188 17.8928 23.1250 17.3928  c
23.5312 16.8928 24.1094 16.6428 24.8594 16.6428  c
25.6406 16.6428 26.2500 16.9553 26.6875 17.5803  c
27.1250 18.2053 27.3438 19.1116 27.3438 20.2991  c
27.3438 21.6116 27.0859 22.6975 26.5703 23.5569  c
26.0547 24.4163 25.3438 24.8459 24.4375 24.8459  c
24.0312 24.8459 23.6797 24.7522 23.3828 24.5647  c
23.0859 24.3772 22.9375 24.1272 22.9375 23.8147  c
22.9375 23.6897 22.9766 23.5647 23.0547 23.4397  c
23.1328 23.3147 23.2656 23.2522 23.4531 23.2522  c
23.6406 23.2522 23.7656 23.3225 23.8281 23.4631  c
23.8906 23.6038 23.9219 23.7678 23.9219 23.9553  c
23.9219 24.0803 23.9375 24.1819 23.9688 24.2600  c
24.0000 24.3381 24.0312 24.3928 24.0625 24.4241  c
24.0938 24.4553 24.1484 24.4788 24.2266 24.4944  c
24.3047 24.5100 24.3906 24.5178 24.4844 24.5178  c
25.0469 24.5178 25.5000 24.2053 25.8438 23.5803  c
26.1875 22.9553 26.3906 21.9084 26.4531 20.4397  c
26.2969 20.8147 26.0625 21.1272 25.7500 21.3772  c
25.4375 21.6272 25.0469 21.7522 24.5781 21.7522  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
29.0000 21.3397 m
426.000 21.3397 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
30.0000 99.6781 m
29.5625 99.6781 29.1953 100.014 28.8984 100.686  c
28.6016 101.358 28.4531 102.256 28.4531 103.381  c
28.4531 104.569 28.6016 105.491 28.8984 106.147  c
29.1953 106.803 29.5625 107.131 30.0000 107.131  c
30.4688 107.131 30.8359 106.803 31.1016 106.147  c
31.3672 105.491 31.5000 104.569 31.5000 103.381  c
31.5000 102.256 31.3750 101.358 31.1250 100.686  c
30.8750 100.014 30.5000 99.6781 30.0000 99.6781  c
h
30.0000 107.506 m
29.3125 107.506 28.7344 107.147 28.2656 106.428  c
27.7969 105.709 27.5625 104.694 27.5625 103.381  c
27.5625 102.162 27.7891 101.178 28.2422 100.428  c
28.6953 99.6781 29.2812 99.3031 30.0000 99.3031  c
30.6875 99.3031 31.2578 99.6625 31.7109 100.381  c
32.1641 101.100 32.3906 102.100 32.3906 103.381  c
32.3906 104.662 32.1641 105.670 31.7109 106.405  c
31.2578 107.139 30.6875 107.506 30.0000 107.506  c
h
f
newpath
89.1881 106.522 m
89.1881 106.741 89.2506 106.897 89.3756 106.991  c
89.5006 107.084 89.6725 107.131 89.8912 107.131  c
90.3131 107.131 l
90.3131 107.412 l
87.2193 107.412 l
87.2193 107.131 l
87.7350 107.131 l
87.9850 107.131 88.1646 107.084 88.2740 106.991  c
88.3834 106.897 88.4381 106.741 88.4381 106.522  c
88.4381 104.975 l
85.2975 104.975 l
85.2975 104.741 l
88.7193 99.3031 l
89.1881 99.3031 l
89.1881 104.694 l
90.4537 104.694 l
90.4537 104.975 l
89.1881 104.975 l
89.1881 106.522 l
h
88.3912 100.475 m
85.7193 104.694 l
88.4381 104.694 l
88.4381 100.475 l
88.3912 100.475 l
h
92.3756 107.553 m
92.1881 107.553 92.0240 107.491 91.8834 107.366  c
91.7428 107.241 91.6725 107.069 91.6725 106.850  c
91.6725 106.631 91.7428 106.459 91.8834 106.334  c
92.0240 106.209 92.1881 106.147 92.3756 106.147  c
92.5631 106.147 92.7271 106.217 92.8678 106.358  c
93.0084 106.498 93.0787 106.662 93.0787 106.850  c
93.0787 107.069 93.0084 107.241 92.8678 107.366  c
92.7271 107.491 92.5631 107.553 92.3756 107.553  c
h
99.8756 99.6781 m
99.4381 99.6781 99.0709 100.014 98.7740 100.686  c
98.4771 101.358 98.3287 102.256 98.3287 103.381  c
98.3287 104.569 98.4771 105.491 98.7740 106.147  c
99.0709 106.803 99.4381 107.131 99.8756 107.131  c
100.344 107.131 100.712 106.803 100.977 106.147  c
101.243 105.491 101.376 104.569 101.376 103.381  c
101.376 102.256 101.251 101.358 101.001 100.686  c
100.751 100.014 100.376 99.6781 99.8756 99.6781  c
h
99.8756 107.506 m
99.1881 107.506 98.6100 107.147 98.1412 106.428  c
97.6725 105.709 97.4381 104.694 97.4381 103.381  c
97.4381 102.162 97.6646 101.178 98.1178 100.428  c
98.5709 99.6781 99.1568 99.3031 99.8756 99.3031  c
100.563 99.3031 101.133 99.6625 101.587 100.381  c
102.040 101.100 102.266 102.100 102.266 103.381  c
102.266 104.662 102.040 105.670 101.587 106.405  c
101.133 107.139 100.563 107.506 99.8756 107.506  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
93.8756 0.00000 m
93.8756 92.0000 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
149.923 105.491 m
149.923 105.991 150.087 106.397 150.415 106.709  c
150.743 107.022 151.157 107.178 151.657 107.178  c
152.251 107.178 152.681 107.022 152.946 106.709  c
153.212 106.397 153.345 106.006 153.345 105.537  c
153.345 105.131 153.157 104.741 152.782 104.366  c
152.407 103.991 151.845 103.647 151.095 103.334  c
150.720 103.584 150.431 103.897 150.228 104.272  c
150.025 104.647 149.923 105.053 149.923 105.491  c
h
154.048 105.397 m
154.048 105.991 153.829 106.491 153.392 106.897  c
152.954 107.303 152.376 107.506 151.657 107.506  c
151.001 107.506 150.439 107.303 149.970 106.897  c
149.501 106.491 149.267 106.022 149.267 105.491  c
149.267 104.959 149.400 104.506 149.665 104.131  c
149.931 103.756 150.314 103.428 150.814 103.147  c
150.376 102.928 150.040 102.655 149.806 102.327  c
149.571 101.998 149.454 101.631 149.454 101.225  c
149.454 100.694 149.657 100.241 150.064 99.8656  c
150.470 99.4906 151.032 99.3031 151.751 99.3031  c
152.407 99.3031 152.939 99.4906 153.345 99.8656  c
153.751 100.241 153.954 100.694 153.954 101.225  c
153.954 101.600 153.837 101.952 153.603 102.280  c
153.368 102.608 153.001 102.897 152.501 103.147  c
153.032 103.459 153.423 103.803 153.673 104.178  c
153.923 104.553 154.048 104.959 154.048 105.397  c
h
153.298 101.272 m
153.298 100.834 153.173 100.452 152.923 100.123  c
152.673 99.7953 152.282 99.6312 151.751 99.6312  c
151.157 99.6312 150.736 99.7875 150.486 100.100  c
150.236 100.412 150.111 100.741 150.111 101.084  c
150.111 101.428 150.290 101.764 150.650 102.092  c
151.009 102.420 151.517 102.709 152.173 102.959  c
152.548 102.772 152.829 102.537 153.017 102.256  c
153.204 101.975 153.298 101.647 153.298 101.272  c
h
156.251 107.553 m
156.064 107.553 155.900 107.491 155.759 107.366  c
155.618 107.241 155.548 107.069 155.548 106.850  c
155.548 106.631 155.618 106.459 155.759 106.334  c
155.900 106.209 156.064 106.147 156.251 106.147  c
156.439 106.147 156.603 106.217 156.743 106.358  c
156.884 106.498 156.954 106.662 156.954 106.850  c
156.954 107.069 156.884 107.241 156.743 107.366  c
156.603 107.491 156.439 107.553 156.251 107.553  c
h
163.751 99.6781 m
163.314 99.6781 162.946 100.014 162.650 100.686  c
162.353 101.358 162.204 102.256 162.204 103.381  c
162.204 104.569 162.353 105.491 162.650 106.147  c
162.946 106.803 163.314 107.131 163.751 107.131  c
164.220 107.131 164.587 106.803 164.853 106.147  c
165.118 105.491 165.251 104.569 165.251 103.381  c
165.251 102.256 165.126 101.358 164.876 100.686  c
164.626 100.014 164.251 99.6781 163.751 99.6781  c
h
163.751 107.506 m
163.064 107.506 162.486 107.147 162.017 106.428  c
161.548 105.709 161.314 104.694 161.314 103.381  c
161.314 102.162 161.540 101.178 161.993 100.428  c
162.446 99.6781 163.032 99.3031 163.751 99.3031  c
164.439 99.3031 165.009 99.6625 165.462 100.381  c
165.915 101.100 166.142 102.100 166.142 103.381  c
166.142 104.662 165.915 105.670 165.462 106.405  c
165.009 107.139 164.439 107.506 163.751 107.506  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
157.751 0.00000 m
157.751 92.0000 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
213.049 99.2562 m
213.049 106.381 l
213.049 106.631 213.127 106.819 213.283 106.944  c
213.439 107.069 213.658 107.131 213.939 107.131  c
214.408 107.131 l
214.408 107.412 l
210.986 107.412 l
210.986 107.131 l
211.408 107.131 l
211.721 107.131 211.947 107.069 212.088 106.944  c
212.228 106.819 212.299 106.631 212.299 106.381  c
212.299 100.709 l
212.299 100.584 212.260 100.483 212.181 100.405  c
212.103 100.327 211.986 100.287 211.830 100.287  c
210.986 100.287 l
210.986 100.006 l
211.408 100.006 l
211.783 100.006 212.088 99.9437 212.322 99.8187  c
212.556 99.6937 212.736 99.5062 212.861 99.2562  c
213.049 99.2562 l
h
219.986 101.366 m
219.986 100.803 219.861 100.373 219.611 100.077  c
219.361 99.7797 218.986 99.6312 218.486 99.6312  c
218.111 99.6312 217.791 99.7328 217.525 99.9359  c
217.260 100.139 217.127 100.397 217.127 100.709  c
217.127 100.897 217.189 101.053 217.314 101.178  c
217.408 101.303 217.455 101.428 217.455 101.553  c
217.455 101.709 217.416 101.827 217.338 101.905  c
217.260 101.983 217.142 102.022 216.986 102.022  c
216.799 102.022 216.650 101.967 216.541 101.858  c
216.431 101.748 216.377 101.569 216.377 101.319  c
216.377 100.662 216.611 100.162 217.080 99.8187  c
217.549 99.4750 218.049 99.3031 218.580 99.3031  c
219.330 99.3031 219.885 99.4906 220.244 99.8656  c
220.603 100.241 220.783 100.709 220.783 101.272  c
220.783 101.647 220.697 102.022 220.525 102.397  c
220.353 102.772 220.080 103.131 219.705 103.475  c
218.799 104.350 218.103 105.061 217.619 105.608  c
217.135 106.155 216.846 106.522 216.752 106.709  c
219.517 106.709 l
219.799 106.709 220.033 106.600 220.221 106.381  c
220.408 106.162 220.533 105.834 220.596 105.397  c
220.877 105.397 l
220.596 107.412 l
216.236 107.412 l
216.236 106.803 l
216.392 106.522 216.650 106.162 217.010 105.725  c
217.369 105.287 217.846 104.772 218.439 104.178  c
218.971 103.647 219.361 103.147 219.611 102.678  c
219.861 102.209 219.986 101.772 219.986 101.366  c
h
223.127 107.553 m
222.939 107.553 222.775 107.491 222.635 107.366  c
222.494 107.241 222.424 107.069 222.424 106.850  c
222.424 106.631 222.494 106.459 222.635 106.334  c
222.775 106.209 222.939 106.147 223.127 106.147  c
223.314 106.147 223.478 106.217 223.619 106.358  c
223.760 106.498 223.830 106.662 223.830 106.850  c
223.830 107.069 223.760 107.241 223.619 107.366  c
223.478 107.491 223.314 107.553 223.127 107.553  c
h
230.627 99.6781 m
230.189 99.6781 229.822 100.014 229.525 100.686  c
229.228 101.358 229.080 102.256 229.080 103.381  c
229.080 104.569 229.228 105.491 229.525 106.147  c
229.822 106.803 230.189 107.131 230.627 107.131  c
231.096 107.131 231.463 106.803 231.728 106.147  c
231.994 105.491 232.127 104.569 232.127 103.381  c
232.127 102.256 232.002 101.358 231.752 100.686  c
231.502 100.014 231.127 99.6781 230.627 99.6781  c
h
230.627 107.506 m
229.939 107.506 229.361 107.147 228.892 106.428  c
228.424 105.709 228.189 104.694 228.189 103.381  c
228.189 102.162 228.416 101.178 228.869 100.428  c
229.322 99.6781 229.908 99.3031 230.627 99.3031  c
231.314 99.3031 231.885 99.6625 232.338 100.381  c
232.791 101.100 233.017 102.100 233.017 103.381  c
233.017 104.662 232.791 105.670 232.338 106.405  c
231.885 107.139 231.314 107.506 230.627 107.506  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
221.627 0.00000 m
221.627 92.0000 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
276.924 99.2562 m
276.924 106.381 l
276.924 106.631 277.002 106.819 277.159 106.944  c
277.315 107.069 277.534 107.131 277.815 107.131  c
278.284 107.131 l
278.284 107.412 l
274.862 107.412 l
274.862 107.131 l
275.284 107.131 l
275.596 107.131 275.823 107.069 275.963 106.944  c
276.104 106.819 276.174 106.631 276.174 106.381  c
276.174 100.709 l
276.174 100.584 276.135 100.483 276.057 100.405  c
275.979 100.327 275.862 100.287 275.705 100.287  c
274.862 100.287 l
274.862 100.006 l
275.284 100.006 l
275.659 100.006 275.963 99.9437 276.198 99.8187  c
276.432 99.6937 276.612 99.5062 276.737 99.2562  c
276.924 99.2562 l
h
280.955 104.225 m
280.955 105.162 281.120 105.889 281.448 106.405  c
281.776 106.920 282.174 107.178 282.643 107.178  c
283.112 107.178 283.471 107.006 283.721 106.662  c
283.971 106.319 284.096 105.678 284.096 104.741  c
284.096 104.116 283.963 103.631 283.698 103.287  c
283.432 102.944 283.112 102.772 282.737 102.772  c
282.393 102.772 282.073 102.873 281.776 103.077  c
281.479 103.280 281.205 103.662 280.955 104.225  c
h
282.784 102.303 m
283.534 102.303 284.073 102.553 284.401 103.053  c
284.729 103.553 284.893 104.116 284.893 104.741  c
284.893 105.678 284.666 106.373 284.213 106.827  c
283.760 107.280 283.237 107.506 282.643 107.506  c
281.799 107.506 281.159 107.186 280.721 106.545  c
280.284 105.905 280.065 104.975 280.065 103.756  c
280.065 102.319 280.330 101.217 280.862 100.452  c
281.393 99.6859 282.112 99.3031 283.018 99.3031  c
283.455 99.3031 283.807 99.4281 284.073 99.6781  c
284.338 99.9281 284.471 100.147 284.471 100.334  c
284.471 100.522 284.432 100.662 284.354 100.756  c
284.276 100.850 284.143 100.897 283.955 100.897  c
283.799 100.897 283.682 100.858 283.604 100.780  c
283.526 100.702 283.487 100.584 283.487 100.428  c
283.487 100.366 283.502 100.303 283.534 100.241  c
283.534 100.178 283.534 100.116 283.534 100.053  c
283.534 99.9281 283.487 99.8266 283.393 99.7484  c
283.299 99.6703 283.127 99.6312 282.877 99.6312  c
282.346 99.6312 281.893 99.8734 281.518 100.358  c
281.143 100.842 280.955 101.897 280.955 103.522  c
281.143 103.116 281.401 102.811 281.729 102.608  c
282.057 102.405 282.409 102.303 282.784 102.303  c
h
287.002 107.553 m
286.815 107.553 286.651 107.491 286.510 107.366  c
286.370 107.241 286.299 107.069 286.299 106.850  c
286.299 106.631 286.370 106.459 286.510 106.334  c
286.651 106.209 286.815 106.147 287.002 106.147  c
287.190 106.147 287.354 106.217 287.495 106.358  c
287.635 106.498 287.705 106.662 287.705 106.850  c
287.705 107.069 287.635 107.241 287.495 107.366  c
287.354 107.491 287.190 107.553 287.002 107.553  c
h
294.502 99.6781 m
294.065 99.6781 293.698 100.014 293.401 100.686  c
293.104 101.358 292.955 102.256 292.955 103.381  c
292.955 104.569 293.104 105.491 293.401 106.147  c
293.698 106.803 294.065 107.131 294.502 107.131  c
294.971 107.131 295.338 106.803 295.604 106.147  c
295.870 105.491 296.002 104.569 296.002 103.381  c
296.002 102.256 295.877 101.358 295.627 100.686  c
295.377 100.014 295.002 99.6781 294.502 99.6781  c
h
294.502 107.506 m
293.815 107.506 293.237 107.147 292.768 106.428  c
292.299 105.709 292.065 104.694 292.065 103.381  c
292.065 102.162 292.291 101.178 292.745 100.428  c
293.198 99.6781 293.784 99.3031 294.502 99.3031  c
295.190 99.3031 295.760 99.6625 296.213 100.381  c
296.666 101.100 296.893 102.100 296.893 103.381  c
296.893 104.662 296.666 105.670 296.213 106.405  c
295.760 107.139 295.190 107.506 294.502 107.506  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
285.502 0.00000 m
285.502 92.0000 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
341.737 101.366 m
341.737 100.803 341.612 100.373 341.362 100.077  c
341.112 99.7797 340.737 99.6312 340.237 99.6312  c
339.862 99.6312 339.542 99.7328 339.276 99.9359  c
339.011 100.139 338.878 100.397 338.878 100.709  c
338.878 100.897 338.940 101.053 339.065 101.178  c
339.159 101.303 339.206 101.428 339.206 101.553  c
339.206 101.709 339.167 101.827 339.089 101.905  c
339.011 101.983 338.894 102.022 338.737 102.022  c
338.550 102.022 338.401 101.967 338.292 101.858  c
338.183 101.748 338.128 101.569 338.128 101.319  c
338.128 100.662 338.362 100.162 338.831 99.8187  c
339.300 99.4750 339.800 99.3031 340.331 99.3031  c
341.081 99.3031 341.636 99.4906 341.995 99.8656  c
342.354 100.241 342.534 100.709 342.534 101.272  c
342.534 101.647 342.448 102.022 342.276 102.397  c
342.104 102.772 341.831 103.131 341.456 103.475  c
340.550 104.350 339.854 105.061 339.370 105.608  c
338.886 106.155 338.597 106.522 338.503 106.709  c
341.269 106.709 l
341.550 106.709 341.784 106.600 341.972 106.381  c
342.159 106.162 342.284 105.834 342.347 105.397  c
342.628 105.397 l
342.347 107.412 l
337.987 107.412 l
337.987 106.803 l
338.144 106.522 338.401 106.162 338.761 105.725  c
339.120 105.287 339.597 104.772 340.190 104.178  c
340.722 103.647 341.112 103.147 341.362 102.678  c
341.612 102.209 341.737 101.772 341.737 101.366  c
h
346.378 99.6781 m
345.940 99.6781 345.573 100.014 345.276 100.686  c
344.979 101.358 344.831 102.256 344.831 103.381  c
344.831 104.569 344.979 105.491 345.276 106.147  c
345.573 106.803 345.940 107.131 346.378 107.131  c
346.847 107.131 347.214 106.803 347.479 106.147  c
347.745 105.491 347.878 104.569 347.878 103.381  c
347.878 102.256 347.753 101.358 347.503 100.686  c
347.253 100.014 346.878 99.6781 346.378 99.6781  c
h
346.378 107.506 m
345.690 107.506 345.112 107.147 344.644 106.428  c
344.175 105.709 343.940 104.694 343.940 103.381  c
343.940 102.162 344.167 101.178 344.620 100.428  c
345.073 99.6781 345.659 99.3031 346.378 99.3031  c
347.065 99.3031 347.636 99.6625 348.089 100.381  c
348.542 101.100 348.769 102.100 348.769 103.381  c
348.769 104.662 348.542 105.670 348.089 106.405  c
347.636 107.139 347.065 107.506 346.378 107.506  c
h
350.878 107.553 m
350.690 107.553 350.526 107.491 350.386 107.366  c
350.245 107.241 350.175 107.069 350.175 106.850  c
350.175 106.631 350.245 106.459 350.386 106.334  c
350.526 106.209 350.690 106.147 350.878 106.147  c
351.065 106.147 351.229 106.217 351.370 106.358  c
351.511 106.498 351.581 106.662 351.581 106.850  c
351.581 107.069 351.511 107.241 351.370 107.366  c
351.229 107.491 351.065 107.553 350.878 107.553  c
h
358.378 99.6781 m
357.940 99.6781 357.573 100.014 357.276 100.686  c
356.979 101.358 356.831 102.256 356.831 103.381  c
356.831 104.569 356.979 105.491 357.276 106.147  c
357.573 106.803 357.940 107.131 358.378 107.131  c
358.847 107.131 359.214 106.803 359.479 106.147  c
359.745 105.491 359.878 104.569 359.878 103.381  c
359.878 102.256 359.753 101.358 359.503 100.686  c
359.253 100.014 358.878 99.6781 358.378 99.6781  c
h
358.378 107.506 m
357.690 107.506 357.112 107.147 356.644 106.428  c
356.175 105.709 355.940 104.694 355.940 103.381  c
355.940 102.162 356.167 101.178 356.620 100.428  c
357.073 99.6781 357.659 99.3031 358.378 99.3031  c
359.065 99.3031 359.636 99.6625 360.089 100.381  c
360.542 101.100 360.769 102.100 360.769 103.381  c
360.769 104.662 360.542 105.670 360.089 106.405  c
359.636 107.139 359.065 107.506 358.378 107.506  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
349.378 0.00000 m
349.378 92.0000 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
405.613 101.366 m
405.613 100.803 405.488 100.373 405.238 100.077  c
404.988 99.7797 404.613 99.6312 404.113 99.6312  c
403.738 99.6312 403.418 99.7328 403.152 99.9359  c
402.886 100.139 402.754 100.397 402.754 100.709  c
402.754 100.897 402.816 101.053 402.941 101.178  c
403.035 101.303 403.082 101.428 403.082 101.553  c
403.082 101.709 403.043 101.827 402.964 101.905  c
402.886 101.983 402.769 102.022 402.613 102.022  c
402.425 102.022 402.277 101.967 402.168 101.858  c
402.058 101.748 402.004 101.569 402.004 101.319  c
402.004 100.662 402.238 100.162 402.707 99.8187  c
403.175 99.4750 403.675 99.3031 404.207 99.3031  c
404.957 99.3031 405.511 99.4906 405.871 99.8656  c
406.230 100.241 406.410 100.709 406.410 101.272  c
406.410 101.647 406.324 102.022 406.152 102.397  c
405.980 102.772 405.707 103.131 405.332 103.475  c
404.425 104.350 403.730 105.061 403.246 105.608  c
402.761 106.155 402.472 106.522 402.379 106.709  c
405.144 106.709 l
405.425 106.709 405.660 106.600 405.847 106.381  c
406.035 106.162 406.160 105.834 406.222 105.397  c
406.504 105.397 l
406.222 107.412 l
401.863 107.412 l
401.863 106.803 l
402.019 106.522 402.277 106.162 402.636 105.725  c
402.996 105.287 403.472 104.772 404.066 104.178  c
404.597 103.647 404.988 103.147 405.238 102.678  c
405.488 102.209 405.613 101.772 405.613 101.366  c
h
411.566 106.522 m
411.566 106.741 411.629 106.897 411.754 106.991  c
411.879 107.084 412.050 107.131 412.269 107.131  c
412.691 107.131 l
412.691 107.412 l
409.597 107.412 l
409.597 107.131 l
410.113 107.131 l
410.363 107.131 410.543 107.084 410.652 106.991  c
410.761 106.897 410.816 106.741 410.816 106.522  c
410.816 104.975 l
407.675 104.975 l
407.675 104.741 l
411.097 99.3031 l
411.566 99.3031 l
411.566 104.694 l
412.832 104.694 l
412.832 104.975 l
411.566 104.975 l
411.566 106.522 l
h
410.769 100.475 m
408.097 104.694 l
410.816 104.694 l
410.816 100.475 l
410.769 100.475 l
h
414.754 107.553 m
414.566 107.553 414.402 107.491 414.261 107.366  c
414.121 107.241 414.050 107.069 414.050 106.850  c
414.050 106.631 414.121 106.459 414.261 106.334  c
414.402 106.209 414.566 106.147 414.754 106.147  c
414.941 106.147 415.105 106.217 415.246 106.358  c
415.386 106.498 415.457 106.662 415.457 106.850  c
415.457 107.069 415.386 107.241 415.246 107.366  c
415.105 107.491 414.941 107.553 414.754 107.553  c
h
422.254 99.6781 m
421.816 99.6781 421.449 100.014 421.152 100.686  c
420.855 101.358 420.707 102.256 420.707 103.381  c
420.707 104.569 420.855 105.491 421.152 106.147  c
421.449 106.803 421.816 107.131 422.254 107.131  c
422.722 107.131 423.089 106.803 423.355 106.147  c
423.621 105.491 423.754 104.569 423.754 103.381  c
423.754 102.256 423.629 101.358 423.379 100.686  c
423.129 100.014 422.754 99.6781 422.254 99.6781  c
h
422.254 107.506 m
421.566 107.506 420.988 107.147 420.519 106.428  c
420.050 105.709 419.816 104.694 419.816 103.381  c
419.816 102.162 420.043 101.178 420.496 100.428  c
420.949 99.6781 421.535 99.3031 422.254 99.3031  c
422.941 99.3031 423.511 99.6625 423.964 100.381  c
424.418 101.100 424.644 102.100 424.644 103.381  c
424.644 104.662 424.418 105.670 423.964 106.405  c
423.511 107.139 422.941 107.506 422.254 107.506  c
h
f
.752941 .752941 .752941 RG
1.00000 w
0 J
1 j
1.00000 M
[ 1.00000 2.00000 ] 0.00000 d
newpath
413.254 0.00000 m
413.254 92.0000 l
S
.990000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
29.0000 0.00000 m
426.000 0.00000 l
426.000 92.0000 l
29.0000 92.0000 l
29.0000 0.00000 l
h
S
1.00000 w
0 J
1 j
1.00000 M
newpath
30.0000 91.0000 m
30.1166 45.8500 l
31.0118 46.0433 l
31.8283 46.2861 l
33.5659 46.4275 l
34.2431 46.9296 l
35.3812 47.2532 l
36.8311 47.4327 l
37.7086 47.6990 l
38.5037 48.0486 l
39.6756 48.2030 l
40.1728 48.7456 l
41.2113 49.0945 l
42.2821 49.4075 l
43.1075 49.6297 l
43.9497 49.9957 l
44.6964 50.3233 l
45.9345 50.5881 l
46.6696 50.9944 l
47.4856 51.3026 l
48.4267 51.5080 l
49.0292 51.9571 l
49.9662 52.0654 l
50.5424 52.5502 l
51.3314 52.7998 l
52.0995 53.1704 l
53.0195 53.3866 l
53.6961 53.8152 l
54.6710 54.2127 l
55.8907 54.2861 l
56.4290 54.9353 l
57.3953 55.2688 l
58.1685 55.6558 l
59.1180 56.0507 l
59.8583 56.3592 l
60.6164 56.6086 l
63.0695 56.8966 l
63.2720 57.7158 l
64.0894 57.9799 l
65.1648 58.1763 l
65.8018 58.8314 l
66.5536 59.1413 l
67.3460 59.4666 l
68.3618 59.4666 l
68.8118 60.0643 l
69.5732 60.3724 l
70.9385 60.3724 l
71.6485 61.0066 l
72.4870 61.4704 l
73.3045 61.8527 l
74.3766 62.0975 l
75.0714 62.5331 l
75.9302 62.7338 l
76.8788 63.1533 l
77.6432 63.4946 l
78.6015 63.7854 l
79.4836 64.1591 l
80.2940 64.3888 l
82.1979 64.6271 l
82.7509 65.1655 l
83.5788 65.5566 l
84.7476 65.7820 l
85.5449 66.1834 l
86.5593 66.4462 l
87.6613 66.6207 l
88.8320 66.9204 l
90.0376 67.2641 l
91.5601 67.6032 l
92.9547 67.8981 l
93.7383 68.3561 l
94.6763 68.6177 l
95.6655 68.8390 l
96.8330 69.0303 l
97.8571 69.3243 l
99.0442 69.5181 l
100.182 69.6445 l
101.373 69.7623 l
102.427 70.0422 l
103.304 70.2189 l
104.307 70.2764 l
105.436 70.3785 l
106.358 70.5578 l
107.777 70.5578 l
109.503 70.7433 l
110.605 70.8580 l
111.829 70.9211 l
112.910 70.9550 l
114.610 70.9727 l
115.637 70.9732 l
116.920 70.9561 l
117.935 70.9074 l
120.184 70.8768 l
121.061 70.7288 l
122.082 70.6420 l
123.432 70.5517 l
124.388 70.3989 l
125.298 70.2638 l
126.756 70.1901 l
127.733 69.9296 l
128.797 69.7517 l
130.159 69.6000 l
131.043 69.3310 l
132.092 69.2109 l
133.299 68.9351 l
134.290 68.6154 l
135.098 68.3778 l
135.997 68.1890 l
137.027 67.8718 l
138.332 67.7048 l
139.133 67.3172 l
140.215 67.0877 l
141.015 66.7399 l
141.970 66.4320 l
142.892 66.1922 l
143.714 65.9155 l
145.178 65.6484 l
145.891 65.0617 l
146.690 64.7015 l
147.468 64.4023 l
148.420 64.0908 l
149.327 63.7264 l
150.096 63.3445 l
150.894 63.0094 l
152.109 62.7303 l
152.844 62.2425 l
153.565 61.9044 l
154.359 61.4831 l
155.181 61.1041 l
156.060 60.6921 l
157.241 60.6921 l
157.813 59.9975 l
158.734 59.4751 l
159.530 59.0785 l
160.355 58.5801 l
161.378 58.2544 l
162.366 58.0120 l
163.146 57.3840 l
164.154 56.8945 l
164.790 56.4234 l
165.448 55.8793 l
166.799 55.6955 l
167.304 54.8468 l
168.468 54.7219 l
168.991 53.9792 l
169.722 53.4662 l
170.521 53.0487 l
171.384 52.4960 l
172.157 52.0389 l
173.213 52.0389 l
173.663 51.1385 l
174.441 50.7653 l
175.207 50.3001 l
176.423 49.5554 l
177.353 49.1951 l
177.785 48.6139 l
178.515 48.2589 l
179.741 47.9456 l
180.664 47.3892 l
181.192 46.8055 l
181.621 46.1978 l
182.412 45.7949 l
183.242 45.4933 l
184.640 45.1610 l
184.800 44.2598 l
185.815 43.8996 l
186.607 43.3393 l
187.137 42.7123 l
187.823 42.1922 l
188.428 41.7968 l
189.056 41.3854 l
189.796 41.1104 l
190.387 40.5128 l
191.248 39.9481 l
192.124 39.7569 l
192.787 39.1714 l
193.480 38.4799 l
194.478 37.8230 l
195.102 37.4118 l
196.032 37.1551 l
196.567 36.5544 l
197.388 35.9111 l
198.132 35.5270 l
198.759 35.0115 l
199.612 34.6836 l
200.193 34.1786 l
201.140 33.4582 l
202.106 32.9354 l
203.079 32.7407 l
203.740 32.1665 l
204.324 31.4013 l
205.134 30.8823 l
205.846 30.4287 l
206.836 29.7995 l
207.616 29.3077 l
208.409 28.9094 l
209.425 28.5268 l
210.033 28.0155 l
210.832 27.4038 l
211.867 27.0598 l
212.432 26.4016 l
213.281 26.1941 l
213.863 25.6844 l
214.414 25.1356 l
215.415 24.6367 l
216.258 24.0484 l
217.904 23.7538 l
218.366 23.0964 l
219.176 22.3737 l
220.228 22.3202 l
220.852 21.7133 l
221.756 21.3622 l
222.144 20.7350 l
222.986 20.2826 l
223.939 20.0435 l
224.900 19.2766 l
225.827 18.8006 l
226.683 18.5357 l
227.321 18.0501 l
228.361 17.7743 l
228.995 17.2345 l
230.087 16.9632 l
230.828 16.4466 l
231.708 16.2246 l
232.321 15.6952 l
233.231 15.2945 l
234.316 14.8277 l
235.376 14.6385 l
236.162 14.1276 l
237.112 13.7468 l
237.971 13.3504 l
238.998 13.1685 l
239.863 12.8520 l
240.628 12.4286 l
241.530 12.0586 l
242.691 12.0114 l
243.303 11.5780 l
244.212 11.1871 l
245.162 11.0679 l
245.903 10.7289 l
246.711 10.4990 l
247.638 10.2490 l
249.037 10.0385 l
249.869 9.64217 l
250.848 9.41694 l
251.896 9.18938 l
252.827 8.99898 l
253.780 8.81631 l
254.799 8.63365 l
255.946 8.50516 l
257.231 8.44557 l
258.084 8.16151 l
259.015 8.02683 l
259.995 7.91924 l
261.052 7.83255 l
262.145 7.72961 l
263.274 7.67930 l
264.372 7.59726 l
265.599 7.59726 l
266.883 7.53379 l
267.909 7.52218 l
269.058 7.53069 l
270.225 7.56165 l
271.375 7.59958 l
273.553 7.64602 l
274.749 7.79463 l
276.054 7.88983 l
277.358 8.01677 l
278.615 8.19014 l
279.587 8.33488 l
280.518 8.41151 l
281.638 8.59959 l
282.486 8.88907 l
283.462 9.04000 l
284.702 9.15068 l
285.470 9.44480 l
286.333 9.66772 l
287.323 9.89373 l
288.292 10.1252 l
289.399 10.1252 l
290.145 10.5934 l
291.053 10.8365 l
292.094 11.1136 l
293.151 11.4255 l
293.975 11.6685 l
295.119 12.0153 l
296.162 12.0153 l
296.926 12.5354 l
297.816 12.8791 l
298.765 12.9596 l
300.282 13.3814 l
301.169 14.0339 l
302.220 14.3548 l
302.976 14.6909 l
305.794 14.7893 l
306.081 15.8099 l
307.044 16.0172 l
307.795 16.4864 l
308.692 16.9119 l
309.785 17.2925 l
310.637 17.7105 l
312.295 17.8341 l
313.001 18.4061 l
313.723 19.0155 l
314.791 19.4082 l
315.489 19.7813 l
316.514 20.1611 l
317.395 20.6210 l
318.221 20.9891 l
318.927 21.3045 l
319.859 21.7249 l
320.754 22.1289 l
321.469 22.4543 l
322.347 22.8552 l
323.444 22.8552 l
324.200 23.4523 l
324.752 23.9615 l
325.488 24.2281 l
326.367 24.7091 l
327.368 25.1006 l
328.503 25.3379 l
329.129 25.8260 l
329.802 26.3102 l
330.656 26.7094 l
331.758 26.8996 l
332.496 27.4957 l
333.636 27.8341 l
334.390 28.3816 l
335.276 28.8707 l
336.065 29.2385 l
336.812 29.5125 l
337.556 29.8594 l
338.722 30.1807 l
339.433 30.6081 l
340.127 31.1264 l
341.376 31.3656 l
342.254 31.8161 l
343.101 32.2939 l
343.913 32.6318 l
344.744 32.8648 l
346.250 33.3350 l
346.735 33.9229 l
347.594 34.3820 l
348.525 34.7142 l
349.193 35.1672 l
349.879 35.5417 l
350.649 35.8102 l
351.780 36.3742 l
353.123 36.4645 l
353.658 37.1175 l
354.835 37.2241 l
355.309 37.8910 l
356.337 37.8910 l
357.062 38.3253 l
358.177 38.7802 l
359.113 39.2627 l
359.777 39.7496 l
360.553 40.0655 l
361.525 40.4570 l
362.393 40.8036 l
363.478 41.1699 l
364.226 41.4636 l
365.222 41.9128 l
366.482 41.9128 l
367.051 42.6122 l
368.250 43.0634 l
369.138 43.3933 l
370.021 43.6600 l
370.789 43.9986 l
371.573 44.2241 l
372.586 44.4796 l
373.416 44.9367 l
374.535 45.1826 l
375.212 45.5608 l
377.255 45.6924 l
377.681 46.3961 l
378.670 46.5532 l
379.451 46.9784 l
380.720 47.1548 l
381.570 47.6574 l
382.652 47.7967 l
383.329 48.2067 l
384.605 48.4019 l
385.600 48.6750 l
386.363 49.1225 l
387.315 49.4020 l
388.470 49.5128 l
389.182 49.8935 l
390.241 50.1269 l
390.972 50.3962 l
391.889 50.5580 l
392.604 50.8860 l
393.942 51.0596 l
394.629 51.3826 l
395.501 51.6514 l
396.673 51.6514 l
397.478 51.9518 l
398.442 52.2636 l
399.436 52.6001 l
400.581 52.7782 l
401.524 52.9940 l
402.296 53.2848 l
403.444 53.5513 l
404.495 53.8279 l
405.330 54.0154 l
406.368 54.2457 l
407.236 54.4009 l
408.442 54.6009 l
409.638 54.8129 l
410.491 55.0431 l
411.732 55.1993 l
412.551 55.5159 l
413.413 55.6623 l
S
.990000 w
2 J
0 j
10.0000 M
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
Q
Q
Q

%%Trailer
%%EOF
